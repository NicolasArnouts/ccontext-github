// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "postgresql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Repository {
  slug String @id @unique

  name String?
  url  String

  userId String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  runs Run[]

  @@index([userId])
  @@index([slug])
}

model Run {
  id String @id @default(uuid())

  repositoryId String

  output String @db.Text

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  repository Repository @relation(fields: [repositoryId], references: [slug], onDelete: Cascade)

  @@index([repositoryId])
}

model UserSubscription {
  id                     String    @id @default(uuid())
  userId                 String    @unique
  stripeCustomerId       String?   @unique @map(name: "stripe_customer_id")
  stripeSubscriptionId   String?   @unique @map(name: "stripe_subscription_id")
  stripePriceId          String?   @map(name: "stripe_price_id")
  stripeCurrentPeriodEnd DateTime? @map(name: "stripe_current_period_end")
}

model AnonymousSession {
  id         String   @id @default(uuid())
  sessionId  String   @unique
  ipAddress  String
  chatCount  Int      @default(0)
  tokenUsage Int      @default(0)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@index([ipAddress])
}

model ChatMessage {
  id        String   @id @default(uuid())
  userId    String?
  sessionId String
  role      String
  content   String   @db.Text
  order     Int
  createdAt DateTime @default(now())

  @@index([userId])
  @@index([sessionId])
  @@index([sessionId, order])
}

model Model {
  id         String       @id @default(uuid())
  name       String       @unique
  tags       String[]
  userTokens UserTokens[]
}

model UserTokens {
  id              String    @id @default(uuid())
  userId          String
  modelId         String
  tokensLeft      Int
  resetTimestamp  DateTime?
  lastRequestTime DateTime?

  model Model @relation(fields: [modelId], references: [id])

  @@unique([userId, modelId])
  @@index([userId])
  @@index([modelId])
}
